global total_bytes, disk_bytes, counter, overall_cache_bytes, overall_disk_bytes

probe vfs.read {
        if (bytes_to_read > 0 && devname != "N/A") {
                total_bytes <<< bytes_to_read
        }
}

probe ioblock.request {
        mydevname = substr(devname,0,3)
        if (rw == 0 && size > 0 && devname != "N/A" && mydevname != "dm-") {
                disk_bytes <<< size
        #       printf("%10d %s %s\n", size, mydevname, devname)
        }
}

probe begin {
        printf("Starting...\n")
}

# print VFS hits and misses every 5 second, plus the hit rate in %
probe timer.s(5) {
        if (counter%15 == 0) {
                printf ("\n%18s %18s %18s %10s %10s\n", 
                        "Total Reads (KB)", "Cache Reads (KB)", "Disk Reads (KB)", "Miss Rate", "Hit Rate")
        }
        counter++

        total_bytes <<< 0 # seeding in case no reads came in
        disk_bytes <<< 0 # seeding in case no reads came in
        sum_disk_bytes = @sum(disk_bytes)
        sum_total_bytes = @sum(total_bytes)
        cache_bytes = sum_total_bytes - sum_disk_bytes
        if (cache_bytes < 0)
                cache_bytes = 0
        if (cache_bytes+sum_disk_bytes > 0) {
                hitrate =  10000 * cache_bytes / (cache_bytes+sum_disk_bytes)
                missrate = 10000 * sum_disk_bytes / (cache_bytes+sum_disk_bytes)
        } else {
                hitrate = 0
                missrate = 0
        }
        printf ("%18d %18d %18d %6d.%02d%% %6d.%02d%%\n",
                sum_total_bytes/1024, cache_bytes/1024, sum_disk_bytes/1024,
                missrate/100, missrate%100, hitrate/100, hitrate%100)
        overall_cache_bytes <<< cache_bytes
        overall_disk_bytes <<< sum_disk_bytes
        delete total_bytes
        delete disk_bytes
}

probe end {
        avg_hitrate =  10000 * @sum(overall_cache_bytes) / ( @sum(overall_cache_bytes) + @sum(overall_disk_bytes) )
        avg_missrate = 10000 * @sum(overall_disk_bytes)  / ( @sum(overall_cache_bytes) + @sum(overall_disk_bytes) )
        printf("\n%s: %d.%02d\n%s: %d.%02d\n",
                " Average Hit Rate", avg_hitrate/100, avg_hitrate%100,
                "Average Miss Rate", avg_missrate/100, avg_missrate%100)
}
