Experiment uses input data and code stored and LSD nfs. To do so, we need to 
mount this file system at worker nodes.

We also need to sync worker node clocks, jobs should start at the same time.

So, before proper execution we need the following config steps
    - generate beefs config. see "gen_beefs_config.sh"
    - alloc. instances. see "./allocate_cloudgley.sh $the_number $emi"
    - config no-pass. see "./config_cloudgley_ssh.sh"
    - config vm image. see "./config_apt.sh"
    - config input (replay code and input) see "./config_input_nfs.sh"
    - sync clocks. see "./sync_clock.sh"
    - gives some permissive permissions to output directory
    - install packages  see "install_libs.sh"
    - generate beefs install (update configs for each beefs component)

Each sample runs according to this script:

    for i in range(num_samples)
        #cleaning system
	foreach worker_node:
	    umount(replay_file_system)
            stop(honeybee(worker_node)
            data_server = ds(worker_node)
            stop(data_server)
            delete_metadata(data_server)
            rollback_raw_data(data_server)
            rollback_metadata(data_server)

        stop(queenbee)
        delete_metadata(queenbee)
        rollback_metadata(queenbee)

	#starting system up
        start(queenbee)
	foreach worker_node:
            data_server = ds(worker_node)
	    start(data_server)
            start(honeybee(worker_node))

	foreach worker_node:
	    #they should start at the same time
	    wait_and_start(worker_node, start_stamp)

	wait_replay(worker_nodes)
	foreach worker_node:
	    copy_results(worker_node)#copy to nfs home
